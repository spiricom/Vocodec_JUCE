/* ==================================== JUCER_BINARY_RESOURCE ====================================

   This is an auto-generated file: Any edits you make may be overwritten!

*/

namespace BinaryData
{

//================== logo_large.svg ==================
static const unsigned char temp_binary_data_0[] =
"<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 20010904//EN\" \"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\">\n"
"<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"367px\" height=\"53px\" viewBox=\"0 0 3670 530\" preserveAspectRatio=\"xMidYMid meet\">\n"
"<g id=\"layer101\" fill=\"#303033\" stroke=\"none\">\n"
" <path d=\"M323 405 l-35 -35 -25 20 c-28 22 -92 27 -125 9 -11 -6 -29 -31 -40 -56 -36 -81 -5 -168 70 -200 29 -12 36 -12 43 -1 18 27 9 53 -24 68 -74 34 -52 156 24 137 17 -4 42 -33 78 -89 70 -108 97 -136 137 -144 38 -7 90 17 99 46 4 12 10 19 13 18 60 -3"
"3 85 -38 119 -27 45 14 73 60 73 119 0 69 -34 117 -96 134 -18 6 -22 2 -26 -24 -4 -26 0 -33 24 -46 35 -18 51 -55 38 -88 -11 -29 -42 -48 -64 -40 -9 4 -45 51 -81 105 -90 136 -137 159 -202 94z m77 -35 c19 -10 94 -113 106 -145 9 -23 -25 -55 -57 -55 -32 0 -"
"63 36 -109 124 l-25 47 24 20 c27 22 35 23 61 9z\"/>\n"
" <path d=\"M892 370 c-21 -9 -48 -57 -38 -67 8 -8 26 7 26 22 0 33 86 48 114 19 32 -31 8 -63 -59 -78 -72 -17 -97 -64 -55 -106 39 -39 140 -17 140 31 0 25 -17 25 -25 -1 -14 -44 -110 -36 -110 10 0 21 9 27 64 46 67 23 81 35 81 72 0 51 -72 78 -138 52z\"/>\n"
" <path d=\"M1080 261 c0 -90 3 -122 12 -119 6 2 39 45 72 96 34 50 64 91 69 91 4 1 7 -42 7 -94 0 -57 4 -95 10 -95 13 0 14 227 1 234 -11 7 -40 -27 -101 -117 l-45 -67 -3 87 c-5 139 -22 126 -22 -16z\"/>\n"
" <path d=\"M1380 329 c0 -45 -6 -60 -45 -116 -26 -36 -44 -68 -41 -71 9 -8 33 17 63 64 15 24 31 44 34 44 3 0 23 -25 43 -55 20 -30 41 -55 46 -55 16 0 13 6 -35 78 -38 56 -45 75 -45 114 0 27 -4 48 -10 48 -5 0 -10 -23 -10 -51z\"/>\n"
" <path d=\"M1524 367 c-2 -7 -3 -60 -2 -118 l3 -104 63 1 c54 1 67 5 89 27 38 37 43 110 11 157 -25 37 -50 47 -116 49 -27 1 -44 -4 -48 -12z m140 -36 c13 -14 18 -33 18 -71 0 -66 -21 -90 -86 -97 l-46 -6 0 103 0 103 47 -7 c26 -3 56 -15 67 -25z\"/>\n"
" <path d=\"M1758 328 c-2 -29 -2 -83 0 -120 l4 -68 73 0 c41 0 77 4 80 10 7 11 1 12 -78 10 l-58 -1 3 43 c3 46 1 45 81 47 70 2 48 21 -24 21 l-59 0 0 45 0 45 71 0 c44 0 68 4 64 10 -3 6 -39 10 -80 10 l-74 0 -3 -52z\"/>\n"
" <path d=\"M1968 374 c-5 -4 -8 -58 -8 -121 l0 -113 58 0 c69 0 103 16 116 53 8 23 6 31 -12 49 -17 17 -19 24 -8 32 18 15 30 109 13 103 -6 -2 -15 -22 -18 -45 -3 -23 -9 -45 -13 -49 -4 -4 -30 -7 -59 -8 l-52 0 -5 53 c-3 30 -8 50 -12 46z m137 -164 c0 -34 -2"
" -35 -46 -44 -66 -13 -79 -5 -79 44 l0 41 63 -3 62 -3 0 -35z\"/>\n"
" <path d=\"M2195 367 c-3 -7 -4 -60 -3 -118 l3 -104 68 1 c78 1 100 15 100 65 0 45 -32 69 -94 69 l-49 0 0 44 c0 44 -15 70 -25 43z m119 -117 c20 -7 26 -16 26 -40 0 -35 -26 -50 -86 -50 l-34 0 0 50 0 50 34 0 c19 0 46 -4 60 -10z\"/>\n"
" <path d=\"M2409 376 c-9 -9 3 -236 12 -236 5 0 9 23 9 50 l0 50 64 0 65 0 3 -47 c2 -27 8 -47 13 -45 6 1 10 47 10 112 0 67 -4 110 -10 110 -5 0 -11 -22 -13 -50 l-3 -50 -65 0 -64 0 0 49 c0 44 -9 68 -21 57z\"/>\n"
" <path d=\"M2692 367 c-52 -29 -71 -100 -42 -164 27 -60 93 -80 150 -46 16 9 33 27 39 40 14 32 14 96 -1 128 -22 48 -96 69 -146 42z m112 -38 c37 -44 36 -101 -3 -140 -80 -80 -181 25 -126 131 17 32 27 38 72 39 23 1 38 -7 57 -30z\"/>\n"
" <path d=\"M2900 259 c0 -92 3 -120 13 -117 6 3 41 47 77 98 l65 93 3 -96 c4 -141 22 -121 22 24 0 92 -3 120 -12 117 -7 -2 -42 -47 -78 -99 l-65 -94 -3 98 c-4 141 -22 122 -22 -24z\"/>\n"
" <path d=\"M3146 373 c-10 -10 -7 -221 3 -228 6 -3 11 42 13 111 3 109 0 132 -16 117z\"/>\n"
" <path d=\"M3257 369 c-27 -16 -47 -64 -47 -115 0 -39 5 -51 34 -80 46 -46 94 -47 137 -4 17 16 27 34 24 40 -4 6 -18 -2 -35 -20 -76 -81 -179 26 -125 130 27 53 103 52 133 0 19 -33 32 -39 32 -14 0 8 -13 29 -29 45 -23 22 -39 29 -68 29 -21 0 -46 -5 -56 -11z"
"\"/>\n"
" <path d=\"M3466 359 c-25 -20 -36 -59 -16 -59 6 0 10 6 10 13 0 24 35 47 72 47 41 0 61 -19 56 -52 -2 -18 -15 -26 -63 -40 -87 -27 -106 -58 -60 -103 33 -34 87 -34 120 0 25 24 32 45 16 45 -5 0 -16 -11 -25 -25 -18 -28 -72 -35 -94 -13 -18 18 -15 56 6 62 9 "
"3 36 10 60 16 52 13 77 46 63 83 -19 50 -97 64 -145 26z\"/>\n"
" </g>\n"
"\n"
"</svg>";

const char* logo_large_svg = (const char*) temp_binary_data_0;

//================== snyderphonics-whitelogo.svg ==================
static const unsigned char temp_binary_data_1[] =
"<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 20010904//EN\" \"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\">\n"
"<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"367px\" height=\"53px\" viewBox=\"0 0 3670 530\" preserveAspectRatio=\"xMidYMid meet\">\n"
"<g id=\"layer101\" fill=\"#303033\" stroke=\"none\">\n"
" <path d=\"M323 405 l-35 -35 -25 20 c-28 22 -92 27 -125 9 -11 -6 -29 -31 -40 -56 -36 -81 -5 -168 70 -200 29 -12 36 -12 43 -1 18 27 9 53 -24 68 -74 34 -52 156 24 137 17 -4 42 -33 78 -89 70 -108 97 -136 137 -144 38 -7 90 17 99 46 4 12 10 19 13 18 60 -3"
"3 85 -38 119 -27 45 14 73 60 73 119 0 69 -34 117 -96 134 -18 6 -22 2 -26 -24 -4 -26 0 -33 24 -46 35 -18 51 -55 38 -88 -11 -29 -42 -48 -64 -40 -9 4 -45 51 -81 105 -90 136 -137 159 -202 94z m77 -35 c19 -10 94 -113 106 -145 9 -23 -25 -55 -57 -55 -32 0 -"
"63 36 -109 124 l-25 47 24 20 c27 22 35 23 61 9z\"/>\n"
" <path d=\"M892 370 c-21 -9 -48 -57 -38 -67 8 -8 26 7 26 22 0 33 86 48 114 19 32 -31 8 -63 -59 -78 -72 -17 -97 -64 -55 -106 39 -39 140 -17 140 31 0 25 -17 25 -25 -1 -14 -44 -110 -36 -110 10 0 21 9 27 64 46 67 23 81 35 81 72 0 51 -72 78 -138 52z\"/>\n"
" <path d=\"M1080 261 c0 -90 3 -122 12 -119 6 2 39 45 72 96 34 50 64 91 69 91 4 1 7 -42 7 -94 0 -57 4 -95 10 -95 13 0 14 227 1 234 -11 7 -40 -27 -101 -117 l-45 -67 -3 87 c-5 139 -22 126 -22 -16z\"/>\n"
" <path d=\"M1380 329 c0 -45 -6 -60 -45 -116 -26 -36 -44 -68 -41 -71 9 -8 33 17 63 64 15 24 31 44 34 44 3 0 23 -25 43 -55 20 -30 41 -55 46 -55 16 0 13 6 -35 78 -38 56 -45 75 -45 114 0 27 -4 48 -10 48 -5 0 -10 -23 -10 -51z\"/>\n"
" <path d=\"M1524 367 c-2 -7 -3 -60 -2 -118 l3 -104 63 1 c54 1 67 5 89 27 38 37 43 110 11 157 -25 37 -50 47 -116 49 -27 1 -44 -4 -48 -12z m140 -36 c13 -14 18 -33 18 -71 0 -66 -21 -90 -86 -97 l-46 -6 0 103 0 103 47 -7 c26 -3 56 -15 67 -25z\"/>\n"
" <path d=\"M1758 328 c-2 -29 -2 -83 0 -120 l4 -68 73 0 c41 0 77 4 80 10 7 11 1 12 -78 10 l-58 -1 3 43 c3 46 1 45 81 47 70 2 48 21 -24 21 l-59 0 0 45 0 45 71 0 c44 0 68 4 64 10 -3 6 -39 10 -80 10 l-74 0 -3 -52z\"/>\n"
" <path d=\"M1968 374 c-5 -4 -8 -58 -8 -121 l0 -113 58 0 c69 0 103 16 116 53 8 23 6 31 -12 49 -17 17 -19 24 -8 32 18 15 30 109 13 103 -6 -2 -15 -22 -18 -45 -3 -23 -9 -45 -13 -49 -4 -4 -30 -7 -59 -8 l-52 0 -5 53 c-3 30 -8 50 -12 46z m137 -164 c0 -34 -2"
" -35 -46 -44 -66 -13 -79 -5 -79 44 l0 41 63 -3 62 -3 0 -35z\"/>\n"
" <path d=\"M2195 367 c-3 -7 -4 -60 -3 -118 l3 -104 68 1 c78 1 100 15 100 65 0 45 -32 69 -94 69 l-49 0 0 44 c0 44 -15 70 -25 43z m119 -117 c20 -7 26 -16 26 -40 0 -35 -26 -50 -86 -50 l-34 0 0 50 0 50 34 0 c19 0 46 -4 60 -10z\"/>\n"
" <path d=\"M2409 376 c-9 -9 3 -236 12 -236 5 0 9 23 9 50 l0 50 64 0 65 0 3 -47 c2 -27 8 -47 13 -45 6 1 10 47 10 112 0 67 -4 110 -10 110 -5 0 -11 -22 -13 -50 l-3 -50 -65 0 -64 0 0 49 c0 44 -9 68 -21 57z\"/>\n"
" <path d=\"M2692 367 c-52 -29 -71 -100 -42 -164 27 -60 93 -80 150 -46 16 9 33 27 39 40 14 32 14 96 -1 128 -22 48 -96 69 -146 42z m112 -38 c37 -44 36 -101 -3 -140 -80 -80 -181 25 -126 131 17 32 27 38 72 39 23 1 38 -7 57 -30z\"/>\n"
" <path d=\"M2900 259 c0 -92 3 -120 13 -117 6 3 41 47 77 98 l65 93 3 -96 c4 -141 22 -121 22 24 0 92 -3 120 -12 117 -7 -2 -42 -47 -78 -99 l-65 -94 -3 98 c-4 141 -22 122 -22 -24z\"/>\n"
" <path d=\"M3146 373 c-10 -10 -7 -221 3 -228 6 -3 11 42 13 111 3 109 0 132 -16 117z\"/>\n"
" <path d=\"M3257 369 c-27 -16 -47 -64 -47 -115 0 -39 5 -51 34 -80 46 -46 94 -47 137 -4 17 16 27 34 24 40 -4 6 -18 -2 -35 -20 -76 -81 -179 26 -125 130 27 53 103 52 133 0 19 -33 32 -39 32 -14 0 8 -13 29 -29 45 -23 22 -39 29 -68 29 -21 0 -46 -5 -56 -11z"
"\"/>\n"
" <path d=\"M3466 359 c-25 -20 -36 -59 -16 -59 6 0 10 6 10 13 0 24 35 47 72 47 41 0 61 -19 56 -52 -2 -18 -15 -26 -63 -40 -87 -27 -106 -58 -60 -103 33 -34 87 -34 120 0 25 24 32 45 16 45 -5 0 -16 -11 -25 -25 -18 -28 -72 -35 -94 -13 -18 18 -15 56 6 62 9 "
"3 36 10 60 16 52 13 77 46 63 83 -19 50 -97 64 -145 26z\"/>\n"
" </g>\n"
"\n"
"</svg>";

const char* snyderphonicswhitelogo_svg = (const char*) temp_binary_data_1;


const char* getNamedResource (const char* resourceNameUTF8, int& numBytes)
{
    unsigned int hash = 0;

    if (resourceNameUTF8 != nullptr)
        while (*resourceNameUTF8 != 0)
            hash = 31 * hash + (unsigned int) *resourceNameUTF8++;

    switch (hash)
    {
        case 0x307b79cc:  numBytes = 3773; return logo_large_svg;
        case 0xa5f7d92a:  numBytes = 3773; return snyderphonicswhitelogo_svg;
        default: break;
    }

    numBytes = 0;
    return nullptr;
}

const char* namedResourceList[] =
{
    "logo_large_svg",
    "snyderphonicswhitelogo_svg"
};

const char* originalFilenames[] =
{
    "logo_large.svg",
    "snyderphonics-whitelogo.svg"
};

const char* getNamedResourceOriginalFilename (const char* resourceNameUTF8)
{
    for (unsigned int i = 0; i < (sizeof (namedResourceList) / sizeof (namedResourceList[0])); ++i)
    {
        if (namedResourceList[i] == resourceNameUTF8)
            return originalFilenames[i];
    }

    return nullptr;
}

}
